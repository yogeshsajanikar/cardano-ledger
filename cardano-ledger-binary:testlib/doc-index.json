[{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:QC\">QC</a> = <a href=\"#v:QC\">QC</a>","name":"QC QC","module":"Test.Cardano.Ledger.Binary.Random","link":"Test-Cardano-Ledger-Binary-Random.html#t:QC"},{"display_html":"<a href=\"#v:mkDummyHash\">mkDummyHash</a> &#8759; &#8704; h a b. (<a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:HashAlgorithm\" title=\"Cardano.Crypto.Hash.Class\">HashAlgorithm</a> h, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> a) &#8658; a &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:Hash\" title=\"Cardano.Crypto.Hash.Class\">Hash</a> h b","name":"mkDummyHash","module":"Test.Cardano.Ledger.Binary.Random","link":"Test-Cardano-Ledger-Binary-Random.html#v:mkDummyHash"},{"display_html":"<a href=\"#v:mkHashStdGen\">mkHashStdGen</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> x &#8658; x &#8594; StdGen","name":"mkHashStdGen","module":"Test.Cardano.Ledger.Binary.Random","link":"Test-Cardano-Ledger-Binary-Random.html#v:mkHashStdGen"},{"display_html":"<a href=\"#v:genVersion\">genVersion</a> &#8759; <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; Gen <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a>","name":"genVersion","module":"Test.Cardano.Ledger.Binary.Arbitrary","link":"Test-Cardano-Ledger-Binary-Arbitrary.html#v:genVersion"},{"display_html":"<a href=\"#v:genByteArray\">genByteArray</a> &#8759; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; Gen ByteArray","name":"genByteArray","module":"Test.Cardano.Ledger.Binary.Arbitrary","link":"Test-Cardano-Ledger-Binary-Arbitrary.html#v:genByteArray"},{"display_html":"<a href=\"#v:genByteString\">genByteString</a> &#8759; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; Gen <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>","name":"genByteString","module":"Test.Cardano.Ledger.Binary.Arbitrary","link":"Test-Cardano-Ledger-Binary-Arbitrary.html#v:genByteString"},{"display_html":"<a href=\"#v:genLazyByteString\">genLazyByteString</a> &#8759; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; Gen ByteString","name":"genLazyByteString","module":"Test.Cardano.Ledger.Binary.Arbitrary","link":"Test-Cardano-Ledger-Binary-Arbitrary.html#v:genLazyByteString"},{"display_html":"<a href=\"#v:genShortByteString\">genShortByteString</a> &#8759; <a href=\"../base/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> &#8594; Gen ShortByteString","name":"genShortByteString","module":"Test.Cardano.Ledger.Binary.Arbitrary","link":"Test-Cardano-Ledger-Binary-Arbitrary.html#v:genShortByteString"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:CBORBytes\">CBORBytes</a> = <a href=\"#v:CBORBytes\">CBORBytes</a> {<ul class=\"subs\"><li><a href=\"#v:unCBORBytes\">unCBORBytes</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a></li></ul>}","name":"CBORBytes CBORBytes unCBORBytes","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#t:CBORBytes"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:HexBytes\">HexBytes</a> = <a href=\"#v:HexBytes\">HexBytes</a> {<ul class=\"subs\"><li><a href=\"#v:unHexBytes\">unHexBytes</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a></li></ul>}","name":"HexBytes HexBytes unHexBytes","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#t:HexBytes"},{"display_html":"<a href=\"#v:showExpr\">showExpr</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-TreeDiff.html#t:ToExpr\" title=\"Cardano.Ledger.TreeDiff\">ToExpr</a> a &#8658; a &#8594; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"showExpr","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:showExpr"},{"display_html":"<a href=\"#v:diffExpr\">diffExpr</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-TreeDiff.html#t:ToExpr\" title=\"Cardano.Ledger.TreeDiff\">ToExpr</a> a &#8658; a &#8594; a &#8594; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"diffExpr","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:diffExpr"},{"display_html":"<a href=\"#v:hexByteStringExpr\">hexByteStringExpr</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a> &#8594; [<a href=\"../cardano-ledger-binary/Cardano-Ledger-TreeDiff.html#t:Expr\" title=\"Cardano.Ledger.TreeDiff\">Expr</a>]","name":"hexByteStringExpr","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:hexByteStringExpr"},{"display_html":"<a href=\"#v:showHexBytesGrouped\">showHexBytesGrouped</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a> &#8594; [<a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a>]","name":"showHexBytesGrouped","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:showHexBytesGrouped"},{"display_html":"<a href=\"#v:expectExprEqual\">expectExprEqual</a> &#8759; (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-TreeDiff.html#t:ToExpr\" title=\"Cardano.Ledger.TreeDiff\">ToExpr</a> a) &#8658; a &#8594; a &#8594; Expectation","name":"expectExprEqual","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:expectExprEqual"},{"display_html":"<a href=\"#v:expectExprEqualWithMessage\">expectExprEqualWithMessage</a> &#8759; (<a href=\"../cardano-ledger-binary/Cardano-Ledger-TreeDiff.html#t:ToExpr\" title=\"Cardano.Ledger.TreeDiff\">ToExpr</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; [<a href=\"../base/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>] &#8594; a &#8594; a &#8594; Expectation","name":"expectExprEqualWithMessage","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:expectExprEqualWithMessage"},{"display_html":"<a href=\"#v:assertExprEqualWithMessage\">assertExprEqualWithMessage</a> &#8759; (<a href=\"../cardano-ledger-binary/Cardano-Ledger-TreeDiff.html#t:ToExpr\" title=\"Cardano.Ledger.TreeDiff\">ToExpr</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; [<a href=\"../base/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a>] &#8594; a &#8594; a &#8594; Assertion","name":"assertExprEqualWithMessage","module":"Test.Cardano.Ledger.Binary.TreeDiff","link":"Test-Cardano-Ledger-Binary-TreeDiff.html#v:assertExprEqualWithMessage"},{"display_html":"<a href=\"#v:roundTripSpec\">roundTripSpec</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> t, Arbitrary t) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> t t &#8594; Spec","name":"roundTripSpec","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:roundTripSpec"},{"display_html":"<a href=\"#v:roundTripFailureExpectation\">roundTripFailureExpectation</a> &#8759; &#8704; a. (<a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> a, <a href=\"../cardano-binary/Cardano-Binary-FromCBOR.html#t:FromCBOR\" title=\"Cardano.Binary.FromCBOR\">FromCBOR</a> a) &#8658; a &#8594; Expectation","name":"roundTripFailureExpectation","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:roundTripFailureExpectation"},{"display_html":"<a href=\"#v:roundTripExpectation\">roundTripExpectation</a> &#8759; (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> t t &#8594; t &#8594; Expectation","name":"roundTripExpectation","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:roundTripExpectation"},{"display_html":"<a href=\"#v:roundTripCborExpectation\">roundTripCborExpectation</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-binary/Cardano-Binary-FromCBOR.html#t:FromCBOR\" title=\"Cardano.Binary.FromCBOR\">FromCBOR</a> t, <a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; t &#8594; Expectation","name":"roundTripCborExpectation","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:roundTripCborExpectation"},{"display_html":"<a href=\"#v:embedTripSpec\">embedTripSpec</a> &#8759; &#8704; a b. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> a, <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> b, Arbitrary a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b &#8594; (b &#8594; a &#8594; Expectation) &#8594; Spec","name":"embedTripSpec","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:embedTripSpec"},{"display_html":"<a href=\"#v:embedTripExpectation\">embedTripExpectation</a> &#8759; &#8704; a b. (<a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> b, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b &#8594; (b &#8594; a &#8594; Expectation) &#8594; a &#8594; Expectation","name":"embedTripExpectation","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:embedTripExpectation"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RoundTripFailure\">RoundTripFailure</a> = <a href=\"#v:RoundTripFailure\">RoundTripFailure</a> {<ul class=\"subs\"><li><a href=\"#v:rtfEncoding\">rtfEncoding</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a></li><li><a href=\"#v:rtfEncodedBytes\">rtfEncodedBytes</a> &#8759; ByteString</li><li><a href=\"#v:rtfReEncodedBytes\">rtfReEncodedBytes</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> ByteString</li><li><a href=\"#v:rtfDecoderError\">rtfDecoderError</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../cardano-binary/Cardano-Binary-FromCBOR.html#t:DecoderError\" title=\"Cardano.Binary.FromCBOR\">DecoderError</a></li></ul>}","name":"RoundTripFailure RoundTripFailure rtfEncoding rtfEncodedBytes rtfReEncodedBytes rtfDecoderError","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:RoundTripFailure"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Trip\">Trip</a> a b = <a href=\"#v:Trip\">Trip</a> {<ul class=\"subs\"><li><a href=\"#v:tripEncoder\">tripEncoder</a> &#8759; a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a></li><li><a href=\"#v:tripDecoder\">tripDecoder</a> &#8759; &#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Plain\">Decoder</a> s b</li></ul>}","name":"Trip Trip tripEncoder tripDecoder","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip"},{"display_html":"<a href=\"#v:mkTrip\">mkTrip</a> &#8759; &#8704; a b. (a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a>) &#8594; (&#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Plain\">Decoder</a> s b) &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b","name":"mkTrip","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:mkTrip"},{"display_html":"<a href=\"#v:cborTrip\">cborTrip</a> &#8759; &#8704; a b. (<a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> a, <a href=\"../cardano-binary/Cardano-Binary-FromCBOR.html#t:FromCBOR\" title=\"Cardano.Binary.FromCBOR\">FromCBOR</a> b) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b","name":"cborTrip","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:cborTrip"},{"display_html":"<a href=\"#v:roundTrip\">roundTrip</a> &#8759; &#8704; t. <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> t &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> t t &#8594; t &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">RoundTripFailure</a> t","name":"roundTrip","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:roundTrip"},{"display_html":"<a href=\"#v:embedTrip\">embedTrip</a> &#8759; &#8704; a b. <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> b &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b &#8594; a &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">RoundTripFailure</a> b","name":"embedTrip","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:embedTrip"},{"display_html":"<a href=\"#v:embedTripLabel\">embedTripLabel</a> &#8759; &#8704; a b. <a href=\"../cardano-prelude/Cardano-Prelude-Base.html#t:Text\" title=\"Cardano.Prelude.Base\">Text</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">Trip</a> a b &#8594; a &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.Plain.RoundTrip\">RoundTripFailure</a> b","name":"embedTripLabel","module":"Test.Cardano.Ledger.Binary.Plain.RoundTrip","link":"Test-Cardano-Ledger-Binary-Plain-RoundTrip.html#v:embedTripLabel"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Enc\">Enc</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:E\">E</a> &#8759; <a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> a &#8658; a &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:Enc\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">Enc</a></li><li><a href=\"#v:Ev\">Ev</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> a &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:Enc\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">Enc</a></li><li><a href=\"#v:Em\">Em</a> &#8759; [<a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:Enc\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">Enc</a>] &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:Enc\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">Enc</a></li></ul>","name":"Enc E Ev Em","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:Enc"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DiffView\">DiffView</a><ul class=\"subs\"><li>= <a href=\"#v:DiffCBOR\">DiffCBOR</a></li><li>| <a href=\"#v:DiffHex\">DiffHex</a></li><li>| <a href=\"#v:DiffRaw\">DiffRaw</a></li><li>| <a href=\"#v:DiffAuto\">DiffAuto</a></li></ul>","name":"DiffView DiffCBOR DiffHex DiffRaw DiffAuto","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView"},{"display_html":"<a href=\"#v:expectGoldenEncoding\">expectGoldenEncoding</a> &#8759; <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> &#8658; (a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a>) &#8594; (b &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a>) &#8594; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">DiffView</a> &#8594; a &#8594; b &#8594; Expectation","name":"expectGoldenEncoding","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#v:expectGoldenEncoding"},{"display_html":"<a href=\"#v:expectGoldenToCBOR\">expectGoldenToCBOR</a> &#8759; (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> a, <a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> b) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">DiffView</a> &#8594; a &#8594; b &#8594; Expectation","name":"expectGoldenToCBOR","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#v:expectGoldenToCBOR"},{"display_html":"<a href=\"#v:expectGoldenEncBytes\">expectGoldenEncBytes</a> &#8759; (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> a) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">DiffView</a> &#8594; a &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a> &#8594; Expectation","name":"expectGoldenEncBytes","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#v:expectGoldenEncBytes"},{"display_html":"<a href=\"#v:expectGoldenEncLazyBytes\">expectGoldenEncLazyBytes</a> &#8759; (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> a) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">DiffView</a> &#8594; a &#8594; ByteString &#8594; Expectation","name":"expectGoldenEncLazyBytes","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#v:expectGoldenEncLazyBytes"},{"display_html":"<a href=\"#v:expectGoldenEncHexBytes\">expectGoldenEncHexBytes</a> &#8759; (<a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> a) &#8658; <a href=\"Test-Cardano-Ledger-Binary-Plain-Golden.html#t:DiffView\" title=\"Test.Cardano.Ledger.Binary.Plain.Golden\">DiffView</a> &#8594; a &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a> &#8594; Expectation","name":"expectGoldenEncHexBytes","module":"Test.Cardano.Ledger.Binary.Plain.Golden","link":"Test-Cardano-Ledger-Binary-Plain-Golden.html#v:expectGoldenEncHexBytes"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Twiddler\">Twiddler</a> a = <a href=\"#v:Twiddler\">Twiddler</a> {<ul class=\"subs\"><li><a href=\"#v:twiddlerVersion\">twiddlerVersion</a> &#8759; !<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a></li><li><a href=\"#v:twiddlerType\">twiddlerType</a> &#8759; !a</li><li><a href=\"#v:twiddlerTerm\">twiddlerTerm</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a></li></ul>}","name":"Twiddler Twiddler twiddlerVersion twiddlerType twiddlerTerm","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddler"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Twiddle\">Twiddle</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:twiddle\">twiddle</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; Gen <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a></li></ul>","name":"Twiddle twiddle","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle"},{"display_html":"<a href=\"#v:encodingToTerm\">encodingToTerm</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-Encoder.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Encoding.Encoder\">Encoding</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a>","name":"encodingToTerm","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:encodingToTerm"},{"display_html":"<a href=\"#v:toTwiddler\">toTwiddler</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> a &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; Gen (<a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddler\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddler</a> a)","name":"toTwiddler","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:toTwiddler"},{"display_html":"<a href=\"#v:toTerm\">toTerm</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> a &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a>","name":"toTerm","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:toTerm"},{"display_html":"<a href=\"#v:twiddleInvariantProp\">twiddleInvariantProp</a> &#8759; &#8704; a. <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> a &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; Gen Property","name":"twiddleInvariantProp","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:twiddleInvariantProp"},{"display_html":"<a href=\"#v:emptyOrNothing\">emptyOrNothing</a> &#8759; &#8704; t b. (<a href=\"../base/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t, <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> (t <a href=\"../base/Data-Void.html#t:Void\" title=\"Data.Void\">Void</a>), <a href=\"../base/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> (t <a href=\"../base/Data-Void.html#t:Void\" title=\"Data.Void\">Void</a>), <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> (t b)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t b &#8594; Gen (<a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a>)","name":"emptyOrNothing","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:emptyOrNothing"},{"display_html":"<a href=\"#v:twiddleStrictMaybe\">twiddleStrictMaybe</a> &#8759; <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> a &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-strict-containers/Data-Maybe-Strict.html#t:StrictMaybe\" title=\"Data.Maybe.Strict\">StrictMaybe</a> a &#8594; Gen (<a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary.html#t:Term\" title=\"Cardano.Ledger.Binary\">Term</a>)","name":"twiddleStrictMaybe","module":"Test.Cardano.Ledger.Binary.Twiddle","link":"Test-Cardano-Ledger-Binary-Twiddle.html#v:twiddleStrictMaybe"},{"display_html":"<a href=\"#v:roundTripSpec\">roundTripSpec</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> t, Arbitrary t) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; Spec","name":"roundTripSpec","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripSpec"},{"display_html":"<a href=\"#v:roundTripRangeSpec\">roundTripRangeSpec</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> t, Arbitrary t) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; Spec","name":"roundTripRangeSpec","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripRangeSpec"},{"display_html":"<a href=\"#v:roundTripExpectation\">roundTripExpectation</a> &#8759; (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; t &#8594; Expectation","name":"roundTripExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripExpectation"},{"display_html":"<a href=\"#v:roundTripRangeExpectation\">roundTripRangeExpectation</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; Expectation","name":"roundTripRangeExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripRangeExpectation"},{"display_html":"<a href=\"#v:roundTripFailureExpectation\">roundTripFailureExpectation</a> &#8759; (<a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; t &#8594; Expectation","name":"roundTripFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripFailureExpectation"},{"display_html":"<a href=\"#v:roundTripRangeFailureExpectation\">roundTripRangeFailureExpectation</a> &#8759; &#8704; t. (<a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; Expectation","name":"roundTripRangeFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripRangeFailureExpectation"},{"display_html":"<a href=\"#v:roundTripCborExpectation\">roundTripCborExpectation</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; t &#8594; Expectation","name":"roundTripCborExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripCborExpectation"},{"display_html":"<a href=\"#v:roundTripCborRangeExpectation\">roundTripCborRangeExpectation</a> &#8759; &#8704; t. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; Expectation","name":"roundTripCborRangeExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripCborRangeExpectation"},{"display_html":"<a href=\"#v:roundTripCborFailureExpectation\">roundTripCborFailureExpectation</a> &#8759; &#8704; t. (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; t &#8594; Expectation","name":"roundTripCborFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripCborFailureExpectation"},{"display_html":"<a href=\"#v:roundTripCborRangeFailureExpectation\">roundTripCborRangeFailureExpectation</a> &#8759; &#8704; t. (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> t, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; Expectation","name":"roundTripCborRangeFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripCborRangeFailureExpectation"},{"display_html":"<a href=\"#v:roundTripAnnExpectation\">roundTripAnnExpectation</a> &#8759; (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Annotated.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding.Annotated\">Annotator</a> t), <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; t &#8594; Expectation","name":"roundTripAnnExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnExpectation"},{"display_html":"<a href=\"#v:roundTripAnnRangeExpectation\">roundTripAnnRangeExpectation</a> &#8759; (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Annotated.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding.Annotated\">Annotator</a> t), <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; Expectation","name":"roundTripAnnRangeExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnRangeExpectation"},{"display_html":"<a href=\"#v:roundTripAnnFailureExpectation\">roundTripAnnFailureExpectation</a> &#8759; (<a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Annotated.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding.Annotated\">Annotator</a> t), <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; t &#8594; Expectation","name":"roundTripAnnFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnFailureExpectation"},{"display_html":"<a href=\"#v:roundTripAnnRangeFailureExpectation\">roundTripAnnRangeFailureExpectation</a> &#8759; (<a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Annotated.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding.Annotated\">Annotator</a> t), <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; Expectation","name":"roundTripAnnRangeFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnRangeFailureExpectation"},{"display_html":"<a href=\"#v:embedTripSpec\">embedTripSpec</a> &#8759; &#8704; a b. (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> a, <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> b, Arbitrary a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; (b &#8594; a &#8594; Expectation) &#8594; Spec","name":"embedTripSpec","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripSpec"},{"display_html":"<a href=\"#v:embedTripExpectation\">embedTripExpectation</a> &#8759; &#8704; a b. (<a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> b, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; (b &#8594; a &#8594; Expectation) &#8594; a &#8594; Expectation","name":"embedTripExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripExpectation"},{"display_html":"<a href=\"#v:embedTripAnnExpectation\">embedTripAnnExpectation</a> &#8759; &#8704; a b. (<a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Annotated.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding.Annotated\">Annotator</a> b), <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; (b &#8594; a &#8594; Expectation) &#8594; a &#8594; Expectation","name":"embedTripAnnExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripAnnExpectation"},{"display_html":"<a href=\"#v:embedTripFailureExpectation\">embedTripFailureExpectation</a> &#8759; (<a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> b, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; a &#8594; Expectation","name":"embedTripFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripFailureExpectation"},{"display_html":"<a href=\"#v:embedTripRangeFailureExpectation\">embedTripRangeFailureExpectation</a> &#8759; &#8704; a b. (<a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> b, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; Expectation","name":"embedTripRangeFailureExpectation","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripRangeFailureExpectation"},{"display_html":"<a href=\"#v:roundTripTwiddledProperty\">roundTripTwiddledProperty</a> &#8759; (<a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> t, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> t, <a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> t) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; Property","name":"roundTripTwiddledProperty","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripTwiddledProperty"},{"display_html":"<a href=\"#v:roundTripAnnTwiddledProperty\">roundTripAnnTwiddledProperty</a> &#8759; &#8704; t q. (<a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Annotated.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding.Annotated\">Annotator</a> t), Testable q) &#8658; (t &#8594; t &#8594; q) &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; Property","name":"roundTripAnnTwiddledProperty","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnTwiddledProperty"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RoundTripFailure\">RoundTripFailure</a> = <a href=\"#v:RoundTripFailure\">RoundTripFailure</a> {<ul class=\"subs\"><li><a href=\"#v:rtfEncoderVersion\">rtfEncoderVersion</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a></li><li><a href=\"#v:rtfDecoderVersion\">rtfDecoderVersion</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a></li><li><a href=\"#v:rtfEncoding\">rtfEncoding</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Plain.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Plain\">Encoding</a></li><li><a href=\"#v:rtfEncodedBytes\">rtfEncodedBytes</a> &#8759; ByteString</li><li><a href=\"#v:rtfReEncodedBytes\">rtfReEncodedBytes</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> ByteString</li><li><a href=\"#v:rtfDropperError\">rtfDropperError</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../cardano-binary/Cardano-Binary-FromCBOR.html#t:DecoderError\" title=\"Cardano.Binary.FromCBOR\">DecoderError</a></li><li><a href=\"#v:rtfDecoderError\">rtfDecoderError</a> &#8759; <a href=\"../base/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"../cardano-binary/Cardano-Binary-FromCBOR.html#t:DecoderError\" title=\"Cardano.Binary.FromCBOR\">DecoderError</a></li></ul>}","name":"RoundTripFailure RoundTripFailure rtfEncoding rtfEncodedBytes rtfReEncodedBytes rtfDecoderError rtfEncoderVersion rtfDecoderVersion rtfDropperError","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Trip\">Trip</a> a b = <a href=\"#v:Trip\">Trip</a> {<ul class=\"subs\"><li><a href=\"#v:tripEncoder\">tripEncoder</a> &#8759; a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-Encoder.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Encoding.Encoder\">Encoding</a></li><li><a href=\"#v:tripDecoder\">tripDecoder</a> &#8759; &#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Decoder.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Decoding.Decoder\">Decoder</a> s b</li><li><a href=\"#v:tripDropper\">tripDropper</a> &#8759; &#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Decoder.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Decoding.Decoder\">Decoder</a> s ()</li></ul>}","name":"Trip Trip tripEncoder tripDecoder tripDropper","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip"},{"display_html":"<a href=\"#v:mkTrip\">mkTrip</a> &#8759; &#8704; a b. (a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-Encoder.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Encoding.Encoder\">Encoding</a>) &#8594; (&#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Decoder.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Decoding.Decoder\">Decoder</a> s b) &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b","name":"mkTrip","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:mkTrip"},{"display_html":"<a href=\"#v:cborTrip\">cborTrip</a> &#8759; &#8704; a b. (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> b) &#8658; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b","name":"cborTrip","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:cborTrip"},{"display_html":"<a href=\"#v:roundTrip\">roundTrip</a> &#8759; &#8704; t. <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> t &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> t t &#8594; t &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> t","name":"roundTrip","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTrip"},{"display_html":"<a href=\"#v:roundTripTwiddled\">roundTripTwiddled</a> &#8759; &#8704; t. (<a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> t) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; Gen (<a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> t)","name":"roundTripTwiddled","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripTwiddled"},{"display_html":"<a href=\"#v:roundTripAnn\">roundTripAnn</a> &#8759; (<a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Annotated.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding.Annotated\">Annotator</a> t)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> t","name":"roundTripAnn","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnn"},{"display_html":"<a href=\"#v:roundTripAnnTwiddled\">roundTripAnnTwiddled</a> &#8759; (<a href=\"Test-Cardano-Ledger-Binary-Twiddle.html#t:Twiddle\" title=\"Test.Cardano.Ledger.Binary.Twiddle\">Twiddle</a> t, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Annotated.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding.Annotated\">Annotator</a> t)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; t &#8594; Gen (<a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> t)","name":"roundTripAnnTwiddled","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:roundTripAnnTwiddled"},{"display_html":"<a href=\"#v:embedTrip\">embedTrip</a> &#8759; &#8704; a b. <a href=\"../base/Data-Typeable.html#t:Typeable\" title=\"Data.Typeable\">Typeable</a> b &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; a &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> b","name":"embedTrip","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTrip"},{"display_html":"<a href=\"#v:embedTripAnn\">embedTripAnn</a> &#8759; &#8704; a b. (<a href=\"../cardano-binary/Cardano-Binary-ToCBOR.html#t:ToCBOR\" title=\"Cardano.Binary.ToCBOR\">ToCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Annotated.html#t:Annotator\" title=\"Cardano.Ledger.Binary.Decoding.Annotated\">Annotator</a> b)) &#8658; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; a &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> b","name":"embedTripAnn","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripAnn"},{"display_html":"<a href=\"#v:embedTripLabel\">embedTripLabel</a> &#8759; &#8704; a b. <a href=\"../cardano-prelude/Cardano-Prelude-Base.html#t:Text\" title=\"Cardano.Prelude.Base\">Text</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a> &#8594; <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:Trip\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">Trip</a> a b &#8594; a &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Test-Cardano-Ledger-Binary-RoundTrip.html#t:RoundTripFailure\" title=\"Test.Cardano.Ledger.Binary.RoundTrip\">RoundTripFailure</a> b","name":"embedTripLabel","module":"Test.Cardano.Ledger.Binary.RoundTrip","link":"Test-Cardano-Ledger-Binary-RoundTrip.html#v:embedTripLabel"},{"display_html":"<a href=\"#v:byronProtVer\">byronProtVer</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Version.html#t:Version\" title=\"Cardano.Ledger.Binary.Version\">Version</a>","name":"byronProtVer","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:byronProtVer"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:U\">U</a>","name":"U","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:U"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:U24\">U24</a>","name":"U24","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:U24"},{"display_html":"<a href=\"#v:extensionProperty\">extensionProperty</a> &#8759; &#8704; a. (Arbitrary a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> a) &#8658; Property","name":"extensionProperty","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:extensionProperty"},{"display_html":"<a href=\"#v:cborFlatTermValid\">cborFlatTermValid</a> &#8759; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> a &#8658; a &#8594; Property","name":"cborFlatTermValid","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:cborFlatTermValid"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SizeTestConfig\">SizeTestConfig</a> a = <a href=\"#v:SizeTestConfig\">SizeTestConfig</a> {<ul class=\"subs\"><li><a href=\"#v:debug\">debug</a> &#8759; a &#8594; <a href=\"../base/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:gen\">gen</a> &#8759; Gen a</li><li><a href=\"#v:precise\">precise</a> &#8759; <a href=\"../base/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:addlCtx\">addlCtx</a> &#8759; <a href=\"../cardano-prelude/Cardano-Prelude-Base.html#t:Map\" title=\"Cardano.Prelude.Base\">Map</a> <a href=\"../base/Data-Typeable.html#t:TypeRep\" title=\"Data.Typeable\">TypeRep</a> <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:SizeOverride\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">SizeOverride</a></li><li><a href=\"#v:computedCtx\">computedCtx</a> &#8759; a &#8594; <a href=\"../cardano-prelude/Cardano-Prelude-Base.html#t:Map\" title=\"Cardano.Prelude.Base\">Map</a> <a href=\"../base/Data-Typeable.html#t:TypeRep\" title=\"Data.Typeable\">TypeRep</a> <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:SizeOverride\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">SizeOverride</a></li></ul>}","name":"SizeTestConfig SizeTestConfig gen debug precise addlCtx computedCtx","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:SizeTestConfig"},{"display_html":"<a href=\"#v:cfg\">cfg</a> &#8759; Buildable a &#8658; <a href=\"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:SizeTestConfig\" title=\"Test.Cardano.Ledger.Binary.Vintage.Helpers\">SizeTestConfig</a> a","name":"cfg","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:cfg"},{"display_html":"<a href=\"#v:scfg\">scfg</a> &#8759; <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a &#8658; <a href=\"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:SizeTestConfig\" title=\"Test.Cardano.Ledger.Binary.Vintage.Helpers\">SizeTestConfig</a> a","name":"scfg","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:scfg"},{"display_html":"<a href=\"#v:sizeTest\">sizeTest</a> &#8759; &#8704; a. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> a &#8658; <a href=\"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#t:SizeTestConfig\" title=\"Test.Cardano.Ledger.Binary.Vintage.Helpers\">SizeTestConfig</a> a &#8594; Property","name":"sizeTest","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers.html#v:sizeTest"},{"display_html":"<a href=\"#v:goldenTestCBOR\">goldenTestCBOR</a> &#8759; &#8704; a. (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; a &#8594; <a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> &#8594; Property","name":"goldenTestCBOR","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:goldenTestCBOR"},{"display_html":"<a href=\"#v:goldenTestCBORExplicit\">goldenTestCBORExplicit</a> &#8759; &#8704; a. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; <a href=\"../cardano-prelude/Cardano-Prelude-Base.html#t:Text\" title=\"Cardano.Prelude.Base\">Text</a> &#8594; (a &#8594; <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-Encoder.html#t:Encoding\" title=\"Cardano.Ledger.Binary.Encoding.Encoder\">Encoding</a>) &#8594; (&#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Decoder.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Decoding.Decoder\">Decoder</a> s a) &#8594; a &#8594; <a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> &#8594; Property","name":"goldenTestCBORExplicit","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:goldenTestCBORExplicit"},{"display_html":"<a href=\"#v:goldenTestExplicit\">goldenTestExplicit</a> &#8759; &#8704; a. (<a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; (a &#8594; ByteString) &#8594; (ByteString &#8594; <a href=\"../base/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"../cardano-binary/Cardano-Binary-FromCBOR.html#t:DecoderError\" title=\"Cardano.Binary.FromCBOR\">DecoderError</a> a) &#8594; a &#8594; <a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> &#8594; Property","name":"goldenTestExplicit","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:goldenTestExplicit"},{"display_html":"<a href=\"#v:roundTripsCBORShow\">roundTripsCBORShow</a> &#8759; (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, MonadTest m, <a href=\"../base/Text-Show.html#t:Show\" title=\"Text.Show\">Show</a> a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; a &#8594; m ()","name":"roundTripsCBORShow","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:roundTripsCBORShow"},{"display_html":"<a href=\"#v:roundTripsCBORBuildable\">roundTripsCBORBuildable</a> &#8759; (<a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-DecCBOR.html#t:DecCBOR\" title=\"Cardano.Ledger.Binary.Decoding.DecCBOR\">DecCBOR</a> a, <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Encoding-EncCBOR.html#t:EncCBOR\" title=\"Cardano.Ledger.Binary.Encoding.EncCBOR\">EncCBOR</a> a, <a href=\"../base/Data-Eq.html#t:Eq\" title=\"Data.Eq\">Eq</a> a, MonadTest m, Buildable a, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; a &#8594; m ()","name":"roundTripsCBORBuildable","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:roundTripsCBORBuildable"},{"display_html":"<a href=\"#v:compareHexDump\">compareHexDump</a> &#8759; (MonadTest m, <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>) &#8658; HexDump &#8594; HexDump &#8594; m ()","name":"compareHexDump","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:compareHexDump"},{"display_html":"<a href=\"#v:deprecatedGoldenDecode\">deprecatedGoldenDecode</a> &#8759; <a href=\"../base/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> &#8658; <a href=\"../cardano-prelude/Cardano-Prelude-Base.html#t:Text\" title=\"Cardano.Prelude.Base\">Text</a> &#8594; (&#8704; s. <a href=\"../cardano-ledger-binary/Cardano-Ledger-Binary-Decoding-Decoder.html#t:Decoder\" title=\"Cardano.Ledger.Binary.Decoding.Decoder\">Decoder</a> s ()) &#8594; <a href=\"../base/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> &#8594; Property","name":"deprecatedGoldenDecode","module":"Test.Cardano.Ledger.Binary.Vintage.Helpers.GoldenRoundTrip","link":"Test-Cardano-Ledger-Binary-Vintage-Helpers-GoldenRoundTrip.html#v:deprecatedGoldenDecode"}]